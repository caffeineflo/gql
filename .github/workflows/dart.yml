name: Dart
on: pull_request

jobs:
  packages:
    strategy:
      fail-fast: false
      matrix:
        package:
          - gql
          - gql_exec
          - gql_code_builder_serializers
          - gql_build
          - gql_code_builder
          - gql_link
          - gql_dedupe_link
          - gql_dio_link
          - gql_error_link
          - gql_http_link
          - gql_websocket_link
          - gql_transform_link
          - gql_tristate_value
    runs-on: ubuntu-latest
    container:
      image: dart:latest
    name: Check ${{ matrix.package }}
    env:
      PACKAGE: ${{ matrix.package }}
    steps:
      - name: Workaround for "detected dubious ownership in repository at", see https://github.com/actions/checkout/issues/1169
        run: |
          git config --system --add safe.directory /__w/gql/gql
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install melos
        run: |
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
          dart pub global activate melos && dart pub get
      - name: Bootstrap workspace
        run: melos bootstrap --no-flutter
      - name: Check formatting
        run: melos format --scope $PACKAGE --set-exit-if-changed
      - name: Run build runner if necessary
        run: melos exec --scope $PACKAGE --depends-on=build_runner -- dart run build_runner build --delete-conflicting-outputs
      - name: Check build diff
        run: git diff --exit-code **/*.gql.dart
      - name: Analyze package
        run: melos analyze --scope $PACKAGE --fatal-warnings
      - name: Run tests
        run: melos exec --scope $PACKAGE --dir-exists=test -- dart test

  examples:
    strategy:
      fail-fast: false
      matrix:
        package:
          - gql_example_cli
          - gql_example_cli_github
          - gql_example_build
          - gql_example_http_auth_link
          - gql_example_dio_link
          # gql_example_flutter would require flutter
    runs-on: ubuntu-latest
    container:
      image: dart
    name: Check ${{ matrix.package }}
    env:
      PACKAGE: ${{ matrix.package }}
    steps:
      - name: Workaround for "detected dubious ownership in repository at", see https://github.com/actions/checkout/issues/1169
        run: |
          git config --system --add safe.directory /__w/gql/
          git config --system --add safe.directory /__w/gql/gql
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install melos
        run: |
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
          dart pub global activate melos && dart pub get
      - name: Bootstrap workspace
        run: melos bootstrap --no-flutter
      - name: Run build runner if necessary
        run: dart run build_runner build --delete-conflicting-outputs || true
      - name: Check build diff
        run: git diff --exit-code **/*.gql.dart
      - name: Check formatting
        run: melos format --scope $PACKAGE --set-exit-if-changed
      - name: Analyze package
        run: melos analyze --scope $PACKAGE --fatal-warnings

  builder_tests:
    strategy:
      matrix:
        package:
          - end_to_end_test
          - end_to_end_test_tristate
    runs-on: ubuntu-latest
    container:
      image: dart
    name: Check ${{ matrix.package }}
    env:
      PACKAGE: ${{ matrix.package }}
    steps:
      - name: Workaround for "detected dubious ownership in repository at", see https://github.com/actions/checkout/issues/1169
        run: |
          git config --system --add safe.directory /__w/gql/
          git config --system --add safe.directory /__w/gql/gql
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install melos
        run: |
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
          dart pub global activate melos && dart pub get
      - name: Bootstrap workspace
        run: melos bootstrap --no-flutter
      - name: Run build runner if necessary
        run: dart run build_runner build --delete-conflicting-outputs || true
      - name: Check build diff
        run: git diff --exit-code **/*.gql.dart
      - name: Check formatting
        run: melos format --scope $PACKAGE --set-exit-if-changed
      - name: Analyze package
        run: melos analyze --scope $PACKAGE --fatal-warnings
      - name: Run tests
        run: melos exec --scope $PACKAGE --dir-exists=test -- dart test

  publish_dry_run:
    runs-on: ubuntu-latest
    container:
      image: dart
    strategy:
      fail-fast: false
      matrix:
        package:
          - gql
          - gql_exec
          - gql_tristate_value
          - gql_link
          - gql_dedupe_link
          - gql_dio_link
          - gql_error_link
          - gql_http_link
          - gql_websocket_link
          - gql_transform_link
          - gql_code_builder_serializers
          - gql_code_builder
          - gql_build
          - gql_pedantic
    name: Publish dry run ${{ matrix.package }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install melos
        run: |
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
          dart pub global activate melos && dart pub get
      - name: Bootstrap workspace
        run: melos bootstrap --no-flutter
      - name: Bump package version
        run: |
          melos version --scope="${{ matrix.package }}" \
            --prerelease \
            --preid=alpha \
            --no-git-tag-version \
            --no-dependent-constraints \
            --no-dependent-versions \
            --no-private \
            --yes
      - name: Validate packages
        run: melos format && melos analyze && melos test
      - name: Validate and publish dry run
        run: |
          melos publish --scope="${{ matrix.package }}" \
            --dry-run \
            --no-git-tag-version \
            --no-private \
            --yes
